// Generated by view binder compiler. Do not edit!
package com.example.wakilink.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wakilink.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button cameraButton;

  @NonNull
  public final ImageView characterImageView;

  @NonNull
  public final EditText translationText;

  @NonNull
  public final TextView welcomeText;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button cameraButton,
      @NonNull ImageView characterImageView, @NonNull EditText translationText,
      @NonNull TextView welcomeText) {
    this.rootView = rootView;
    this.cameraButton = cameraButton;
    this.characterImageView = characterImageView;
    this.translationText = translationText;
    this.welcomeText = welcomeText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cameraButton;
      Button cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.characterImageView;
      ImageView characterImageView = ViewBindings.findChildViewById(rootView, id);
      if (characterImageView == null) {
        break missingId;
      }

      id = R.id.translationText;
      EditText translationText = ViewBindings.findChildViewById(rootView, id);
      if (translationText == null) {
        break missingId;
      }

      id = R.id.welcomeText;
      TextView welcomeText = ViewBindings.findChildViewById(rootView, id);
      if (welcomeText == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, cameraButton, characterImageView,
          translationText, welcomeText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
