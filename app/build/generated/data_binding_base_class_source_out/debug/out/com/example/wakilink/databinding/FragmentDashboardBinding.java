// Generated by view binder compiler. Do not edit!
package com.example.wakilink.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.wakilink.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardDailySessions;

  @NonNull
  public final CardView cardLocalUsers;

  @NonNull
  public final CardView cardTotalUsers;

  @NonNull
  public final TextView dailySessionsCount;

  @NonNull
  public final TextView localUsersCount;

  @NonNull
  public final TextView titleDashboard;

  @NonNull
  public final TextView totalUsersCount;

  private FragmentDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView cardDailySessions, @NonNull CardView cardLocalUsers,
      @NonNull CardView cardTotalUsers, @NonNull TextView dailySessionsCount,
      @NonNull TextView localUsersCount, @NonNull TextView titleDashboard,
      @NonNull TextView totalUsersCount) {
    this.rootView = rootView;
    this.cardDailySessions = cardDailySessions;
    this.cardLocalUsers = cardLocalUsers;
    this.cardTotalUsers = cardTotalUsers;
    this.dailySessionsCount = dailySessionsCount;
    this.localUsersCount = localUsersCount;
    this.titleDashboard = titleDashboard;
    this.totalUsersCount = totalUsersCount;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_daily_sessions;
      CardView cardDailySessions = ViewBindings.findChildViewById(rootView, id);
      if (cardDailySessions == null) {
        break missingId;
      }

      id = R.id.card_local_users;
      CardView cardLocalUsers = ViewBindings.findChildViewById(rootView, id);
      if (cardLocalUsers == null) {
        break missingId;
      }

      id = R.id.card_total_users;
      CardView cardTotalUsers = ViewBindings.findChildViewById(rootView, id);
      if (cardTotalUsers == null) {
        break missingId;
      }

      id = R.id.daily_sessions_count;
      TextView dailySessionsCount = ViewBindings.findChildViewById(rootView, id);
      if (dailySessionsCount == null) {
        break missingId;
      }

      id = R.id.local_users_count;
      TextView localUsersCount = ViewBindings.findChildViewById(rootView, id);
      if (localUsersCount == null) {
        break missingId;
      }

      id = R.id.title_dashboard;
      TextView titleDashboard = ViewBindings.findChildViewById(rootView, id);
      if (titleDashboard == null) {
        break missingId;
      }

      id = R.id.total_users_count;
      TextView totalUsersCount = ViewBindings.findChildViewById(rootView, id);
      if (totalUsersCount == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ConstraintLayout) rootView, cardDailySessions,
          cardLocalUsers, cardTotalUsers, dailySessionsCount, localUsersCount, titleDashboard,
          totalUsersCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
